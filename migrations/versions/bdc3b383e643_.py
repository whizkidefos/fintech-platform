"""empty message

Revision ID: bdc3b383e643
Revises: 6887e86440a2
Create Date: 2025-01-01 21:42:46.277488

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bdc3b383e643'
down_revision = '6887e86440a2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('asset_metrics')
    op.drop_table('asset_prices')
    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('day_open', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_high', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_low', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_volume', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('symbol',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=True)
        batch_op.alter_column('asset_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=32),
               nullable=True)
        batch_op.alter_column('current_price',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=True)
        batch_op.drop_column('is_tradable')
        batch_op.drop_column('tick_size')
        batch_op.drop_column('min_quantity')
        batch_op.drop_column('beta')
        batch_op.drop_column('sharpe_ratio')
        batch_op.drop_column('max_quantity')
        batch_op.drop_column('volatility')
        batch_op.drop_column('description')

    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_value', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('total_cost', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('unrealized_pnl', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('realized_pnl', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_change', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_change_pct', sa.Numeric(precision=10, scale=4), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=256),
               existing_nullable=True)
        batch_op.alter_column('risk_profile',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.drop_column('rebalancing_frequency')
        batch_op.drop_column('target_return')
        batch_op.drop_column('max_drawdown')
        batch_op.drop_column('settings')

    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_value', sa.Numeric(precision=20, scale=8), nullable=False))
        batch_op.add_column(sa.Column('unrealized_pnl', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('realized_pnl', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('return_pct', sa.Numeric(precision=10, scale=4), nullable=True))
        batch_op.add_column(sa.Column('day_change', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('day_change_pct', sa.Numeric(precision=10, scale=4), nullable=True))
        batch_op.alter_column('quantity',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=False)
        batch_op.alter_column('cost_basis',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=False)
        batch_op.drop_column('var')
        batch_op.drop_column('leverage')
        batch_op.drop_column('beta')
        batch_op.drop_column('stop_loss')
        batch_op.drop_column('take_profit')

    with op.batch_alter_table('trading_signals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timeframe', sa.String(length=32), nullable=False))
        batch_op.add_column(sa.Column('entry_price', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('stop_loss', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('take_profit', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('executed_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('signal_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('direction',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('confidence',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('strategy',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=64),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=True)
        batch_op.drop_column('signal_metadata')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('total_amount', sa.Numeric(precision=20, scale=8), nullable=False))
        batch_op.add_column(sa.Column('order_type', sa.String(length=32), nullable=False))
        batch_op.add_column(sa.Column('order_status', sa.String(length=32), nullable=False))
        batch_op.add_column(sa.Column('signal_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('executed_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('transaction_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=False)
        batch_op.alter_column('fees',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=20, scale=8),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'trading_signals', ['signal_id'], ['id'])
        batch_op.drop_column('timestamp')
        batch_op.drop_column('execution_id')
        batch_op.drop_column('status')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('last_updated', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('last_updated')
        batch_op.drop_column('is_verified')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('execution_id', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('timestamp', sa.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('fees',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('price',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=False)
        batch_op.alter_column('transaction_type',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('executed_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('signal_id')
        batch_op.drop_column('order_status')
        batch_op.drop_column('order_type')
        batch_op.drop_column('total_amount')

    with op.batch_alter_table('trading_signals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('signal_metadata', sa.TEXT(), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('strategy',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('confidence',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('direction',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('signal_type',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('executed_at')
        batch_op.drop_column('take_profit')
        batch_op.drop_column('stop_loss')
        batch_op.drop_column('entry_price')
        batch_op.drop_column('timeframe')

    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('take_profit', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('stop_loss', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('beta', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('leverage', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('var', sa.FLOAT(), nullable=True))
        batch_op.alter_column('cost_basis',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=False)
        batch_op.alter_column('quantity',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=False)
        batch_op.drop_column('day_change_pct')
        batch_op.drop_column('day_change')
        batch_op.drop_column('return_pct')
        batch_op.drop_column('realized_pnl')
        batch_op.drop_column('unrealized_pnl')
        batch_op.drop_column('current_value')

    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.add_column(sa.Column('settings', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('max_drawdown', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('target_return', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('rebalancing_frequency', sa.VARCHAR(length=50), nullable=True))
        batch_op.alter_column('risk_profile',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('day_change_pct')
        batch_op.drop_column('day_change')
        batch_op.drop_column('realized_pnl')
        batch_op.drop_column('unrealized_pnl')
        batch_op.drop_column('total_cost')
        batch_op.drop_column('total_value')

    with op.batch_alter_table('assets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('volatility', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('max_quantity', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('sharpe_ratio', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('beta', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('min_quantity', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('tick_size', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('is_tradable', sa.BOOLEAN(), nullable=True))
        batch_op.alter_column('current_price',
               existing_type=sa.Numeric(precision=20, scale=8),
               type_=sa.FLOAT(),
               existing_nullable=True)
        batch_op.alter_column('asset_type',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('symbol',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('created_at')
        batch_op.drop_column('day_volume')
        batch_op.drop_column('day_low')
        batch_op.drop_column('day_high')
        batch_op.drop_column('day_open')

    op.create_table('asset_prices',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('asset_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('open_price', sa.FLOAT(), nullable=True),
    sa.Column('high_price', sa.FLOAT(), nullable=True),
    sa.Column('low_price', sa.FLOAT(), nullable=True),
    sa.Column('close_price', sa.FLOAT(), nullable=True),
    sa.Column('volume', sa.FLOAT(), nullable=True),
    sa.Column('bid', sa.FLOAT(), nullable=True),
    sa.Column('ask', sa.FLOAT(), nullable=True),
    sa.Column('vwap', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('asset_metrics',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('asset_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('sma_20', sa.FLOAT(), nullable=True),
    sa.Column('sma_50', sa.FLOAT(), nullable=True),
    sa.Column('sma_200', sa.FLOAT(), nullable=True),
    sa.Column('rsi_14', sa.FLOAT(), nullable=True),
    sa.Column('macd', sa.FLOAT(), nullable=True),
    sa.Column('macd_signal', sa.FLOAT(), nullable=True),
    sa.Column('macd_hist', sa.FLOAT(), nullable=True),
    sa.Column('daily_volatility', sa.FLOAT(), nullable=True),
    sa.Column('weekly_volatility', sa.FLOAT(), nullable=True),
    sa.Column('monthly_volatility', sa.FLOAT(), nullable=True),
    sa.Column('daily_var', sa.FLOAT(), nullable=True),
    sa.Column('weekly_var', sa.FLOAT(), nullable=True),
    sa.Column('monthly_var', sa.FLOAT(), nullable=True),
    sa.Column('market_cap', sa.FLOAT(), nullable=True),
    sa.Column('pe_ratio', sa.FLOAT(), nullable=True),
    sa.Column('pb_ratio', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
